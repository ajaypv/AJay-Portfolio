<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on</title><link>https://ajaypvnotion.web.app/categories/programming/</link><description>Recent content in Programming on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 05 Apr 2024 12:42:42 +0530</lastBuildDate><atom:link href="https://ajaypvnotion.web.app/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust-basics</title><link>https://ajaypvnotion.web.app/blogs/blog1/</link><pubDate>Fri, 05 Apr 2024 12:42:42 +0530</pubDate><guid>https://ajaypvnotion.web.app/blogs/blog1/</guid><description>Rust Programming Language Rust is a systems programming language that focuses on safety, speed, and concurrency. It is designed to be memory-safe and thread-safe while still providing high performance. Rust achieves this by enforcing strict compile-time checks and ownership rules.
Features of Rust Memory Safety: Rust&amp;rsquo;s ownership system ensures memory safety by preventing common programming errors such as null pointer dereferences, buffer overflows, and data races.
Concurrency: Rust provides built-in concurrency primitives like threads and channels, making it easy to write concurrent programs without worrying about data races.</description></item></channel></rss>