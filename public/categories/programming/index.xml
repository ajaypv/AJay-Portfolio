<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on </title>
    <link>http://localhost:1313/categories/programming/</link>
    <description>Recent content in Programming on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Apr 2024 18:04:16 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RUST level-0.1</title>
      <link>http://localhost:1313/blogs/bog5/</link>
      <pubDate>Tue, 09 Apr 2024 18:04:16 +0530</pubDate>
      <guid>http://localhost:1313/blogs/bog5/</guid>
      <description>Rust Programming Language Rust is a systems programming language that focuses on safety, speed, and concurrency. It is designed to be memory-safe and thread-safe while still providing high performance. Rust achieves this by enforcing strict compile-time checks and ownership rules.&#xA;Features of Rust Memory Safety: Rust&amp;rsquo;s ownership system ensures memory safety by preventing common programming errors such as null pointer dereferences, buffer overflows, and data races.&#xA;Concurrency: Rust provides built-in concurrency primitives like threads and channels, making it easy to write concurrent programs without worrying about data races.</description>
    </item>
    <item>
      <title>RUST level-0</title>
      <link>http://localhost:1313/blogs/bog4/</link>
      <pubDate>Tue, 09 Apr 2024 18:04:10 +0530</pubDate>
      <guid>http://localhost:1313/blogs/bog4/</guid>
      <description>Rust Programming Language Rust is a systems programming language that focuses on safety, speed, and concurrency. It is designed to be memory-safe and thread-safe while still providing high performance. Rust achieves this by enforcing strict compile-time checks and ownership rules.&#xA;Features of Rust Memory Safety: Rust&amp;rsquo;s ownership system ensures memory safety by preventing common programming errors such as null pointer dereferences, buffer overflows, and data races.&#xA;Concurrency: Rust provides built-in concurrency primitives like threads and channels, making it easy to write concurrent programs without worrying about data races.</description>
    </item>
    <item>
      <title>Bog3</title>
      <link>http://localhost:1313/blogs/bog3/</link>
      <pubDate>Tue, 09 Apr 2024 18:03:37 +0530</pubDate>
      <guid>http://localhost:1313/blogs/bog3/</guid>
      <description>Rust Programming Language Rust is a systems programming language that focuses on safety, speed, and concurrency. It is designed to be memory-safe and thread-safe while still providing high performance. Rust achieves this by enforcing strict compile-time checks and ownership rules.&#xA;Features of Rust Memory Safety: Rust&amp;rsquo;s ownership system ensures memory safety by preventing common programming errors such as null pointer dereferences, buffer overflows, and data races.&#xA;Concurrency: Rust provides built-in concurrency primitives like threads and channels, making it easy to write concurrent programs without worrying about data races.</description>
    </item>
  </channel>
</rss>
